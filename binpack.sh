# p8 out num
# appends
p8() {
    local -n p8_out="$1"
    printf -v p8_out '%s\\x%02x' "${p8_out-}" $(($2 & 0xff))
}

p16() {
    p8 $1 $2
    p8 $1 $(($2 >> 8))
}

p32() {
    p8 $1 $2
    p8 $1 $(($2 >> 8))
    p8 $1 $(($2 >> 16))
    p8 $1 $(($2 >> 24))
}

p64() {
    p8 $1 $2
    p8 $1 $(($2 >> 8))
    p8 $1 $(($2 >> 16))
    p8 $1 $(($2 >> 24))
    p8 $1 $(($2 >> 32))
    p8 $1 $(($2 >> 40))
    p8 $1 $(($2 >> 48))
    p8 $1 $(($2 >> 56))
}

# binlength out data
binlength() {
    printf -v _ '%b%n' "$2" "$1"
}
